{"version":3,"sources":["webpack:///./src/models/CopybookModel.js","webpack:///./src/models/ErrorModel.js","webpack:///./src/models/metadata/GitHubData.js"],"names":["REPO_FILE_URL_KEY","AppModel","genPersistenceKey","CopybookModel","_data","visible","fileList","selectedFile","fileContent","cachedFileUrl","LocalStorage","getItem","Date","timer","setTimeout","requestRepoTrees","GitHubData","requestCLangAlgorithmsRepoTree","clData","_updateFileList","requestRepoFile","_genCachedFile","requestJavascriptAlgorithmsRepoTree","jsData","requestPythonAlgorithmsRepoTree","pyData","requestJavaAlgorithmsRepoTree","jvData","requestSwiftAlgorithmsRepoTree","swData","length","file","url","data","toISOString","substr","update","setItem","find","f","Tools","BaseModel","ErrorModel","message","error","CLANG","name","gitHub","postfix","included","excluded","JS","PY","JAVA","SWIFT","_repoStore","Store","Infinity","repo","cacheId","cache","get","fetch","res","json","save","Error","requestRepoLatestCommit","latestCommit","commit","tree","Array","prototype","filter","call","n","path","link","_isIncludedFile","endsWith","requestRepoTree","content","window","atob","list","p","includes"],"mappings":"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","file":"3.app.js","sourcesContent":["import BaseModel from './BaseModel';\nimport * as Tools from '../utils/Tools';\nimport GitHubData from './metadata/GitHubData';\nimport LocalStorage from '../utils/LocalStorage';\nimport AppModel from './AppModel';\n\nconst REPO_FILE_URL_KEY = AppModel.genPersistenceKey('agor_repo_file_url_key');\n\nclass CopybookModel extends BaseModel {\n  constructor() {\n    super();\n    this._data = {\n      visible: false,\n      fileList: [],\n      selectedFile: null,\n      fileContent: null,\n      cachedFileUrl: LocalStorage.getItem(REPO_FILE_URL_KEY),\n    };\n    // only cache 24 hours\n    if (this._data.cachedFileUrl && (new Date() - new Date(this._data.cachedFileUrl.timer)) >= 86400000) {\n      this._data.cachedFileUrl = null;\n    }\n    setTimeout(() => this.requestRepoTrees(), 100);\n  }\n\n  async requestRepoTrees() {\n    const clData = await GitHubData.requestCLangAlgorithmsRepoTree();\n    if (!this._data.cachedFileUrl && clData) {\n      this._updateFileList(clData);\n      this.requestRepoFile(this._genCachedFile(this.fileList));\n    }\n    const jsData = await GitHubData.requestJavascriptAlgorithmsRepoTree();\n    this._updateFileList(jsData);\n    const pyData = await GitHubData.requestPythonAlgorithmsRepoTree();\n    this._updateFileList(pyData);\n    const jvData = await GitHubData.requestJavaAlgorithmsRepoTree();\n    this._updateFileList(jvData);\n    const swData = await GitHubData.requestSwiftAlgorithmsRepoTree();\n    this._updateFileList(swData);\n    if (this.fileList.length) {\n      this.requestRepoFile(this._genCachedFile(this.fileList));\n    }\n  }\n\n  async requestRepoFile(file) {\n    if (!file) { return; }\n    const data = await GitHubData.requestRepoFile(file.url);\n    if (data) {\n      const cachedFileUrl = {\n        timer: (new Date()).toISOString().substr(0, 10),\n        url: file.url\n      };\n      this.update({\n        selectedFile: file,\n        fileContent: data,\n        cachedFileUrl: cachedFileUrl\n      });\n      LocalStorage.setItem(REPO_FILE_URL_KEY, cachedFileUrl);\n    }\n  }\n\n  _updateFileList(data) {\n    data && this.update({\n      fileList: [...this.fileList, ...data]\n    });\n  }\n\n  _genCachedFile(data) {\n    let file;\n    if (this._data.cachedFileUrl) {\n      file = data.find(f => f.url === this._data.cachedFileUrl.url);\n    }\n    return file || Tools.randomList(data, 1)[0];\n  }\n\n  get fileList() {\n    return this._data.fileList;\n  }\n\n  get selectedFile() {\n    return this._data.selectedFile;\n  }\n\n  get fileContent() {\n    return this._data.fileContent;\n  }\n\n  get visible() {\n    return this._data.visible;\n  }\n}\n\nexport default new CopybookModel();\n","import BaseModel from './BaseModel';\n\nclass ErrorModel extends BaseModel {\n  constructor() {\n    super();\n    this._data = {\n      visible: false,\n      message: '',\n      error: null\n    };\n  }\n\n  get message() {\n    return this._data.message;\n  }\n\n  get error() {\n    return this._data.error;\n  }\n\n  set error(error) {\n    this.update({\n      visible: true,\n      message: error.message,\n      error: error\n    });\n  }\n}\n\nexport default new ErrorModel();\n","import Store from '../Store';\nimport ErrorModel from '../ErrorModel';\n\nconst CLANG = {\n  name: 'TheAlgorithms/C',\n  gitHub: 'https://github.com/TheAlgorithms/C/tree/master',\n  postfix: '.c',\n  included: [\n    'conversions',\n    'data_structures',\n    'hash',\n    'misc',\n    'searching',\n    'sorting'\n  ],\n  excluded: [\n  ]\n};\n\nconst JS = {\n  name: 'trekhleb/javascript-algorithms',\n  gitHub: 'https://github.com/trekhleb/javascript-algorithms/tree/master',\n  postfix: '.js',\n  included: [\n    'src/algorithms/',\n    'src/data-structures/'\n  ],\n  excluded: [\n    '__test__'\n  ]\n};\n\nconst PY = {\n  name: 'TheAlgorithms/Python',\n  gitHub: 'https://github.com/TheAlgorithms/Python/tree/master',\n  postfix: '.py',\n  included: [\n    'Maths',\n    'binary_tree',\n    'data_structures',\n    'dynamic_programming',\n    'graphs',\n    'hashes',\n    'maths',\n    'other',\n    'searches',\n    'strings',\n    'sorts'\n  ],\n  excluded: [\n    '__init__.py'\n  ]\n};\n\nconst JAVA = {\n  name: 'TheAlgorithms/Java',\n  gitHub: 'https://github.com/TheAlgorithms/Java/tree/master',\n  postfix: '.java',\n  included: [\n    'Conversions',\n    'DataStructures',\n    'Misc',\n    'Others',\n    'Searches',\n    'Sorts'\n  ],\n  excluded: [\n  ]\n};\n\nconst SWIFT = {\n  name: 'raywenderlich/swift-algorithm-club',\n  gitHub: 'https://github.com/raywenderlich/swift-algorithm-club/tree/master',\n  postfix: '.swift',\n  included: [\n  ],\n  excluded: [\n    '/Tests/',\n    '.playground'\n  ]\n}\n\nclass GitHubData {\n  constructor() {\n    this._repoStore = new Store(Infinity);\n  }\n\n  async requestRepoLatestCommit(repo) {\n    const cacheId = 'requestRepoLatestCommit' + repo;\n    const cache = this._repoStore.get(cacheId);\n    if (cache) {\n      return cache;\n    }\n    try {\n      const url = `https://api.github.com/repos/${repo}/commits?`;\n      let res = await fetch(url + (new Date()).toISOString().substr(0, 7));\n      res = await res.json();\n      if (res) {\n        const data = res[0];\n        this._repoStore.save(cacheId, data);\n        return data;\n      } else {\n        throw new Error(`Request Repo latest Commit failed`);\n      }\n    } catch (err) {\n      ErrorModel.error = err;\n    }\n  }\n\n  async requestRepoTree(repo) {\n    const cacheId = 'requestRepoTree' + repo.name;\n    const cache = this._repoStore.get(cacheId);\n    if (cache) {\n      return cache;\n    }\n    try {\n      const latestCommit = await this.requestRepoLatestCommit(repo.name);\n      const url = `${latestCommit.commit.tree.url}?recursive=1`;\n      let res = await fetch(url);\n      res = await res.json();\n      if (res) {\n        const data = Array.prototype.filter.call(res.tree, n => {\n          const path = n.path;\n          n.link = `${repo.gitHub}/${path}`;\n          return (this._isIncludedFile(path, repo.included) || !repo.included.length)\n            && path.endsWith(repo.postfix)\n            && !this._isIncludedFile(path, repo.excluded);\n        });\n        this._repoStore.save(cacheId, data);\n        return data;\n      } else {\n        throw new Error(`Request Repo Tree failed`);\n      }\n    } catch (err) {\n      ErrorModel.error = err;\n    }\n  }\n\n  async requestJavascriptAlgorithmsRepoTree() {\n    return this.requestRepoTree(JS);\n  }\n\n  async requestPythonAlgorithmsRepoTree() {\n    return this.requestRepoTree(PY);\n  }\n\n  async requestJavaAlgorithmsRepoTree() {\n    return this.requestRepoTree(JAVA);\n  }\n\n  async requestCLangAlgorithmsRepoTree() {\n    return this.requestRepoTree(CLANG);\n  }\n\n  async requestSwiftAlgorithmsRepoTree() {\n    return this.requestRepoTree(SWIFT);\n  }\n\n  async requestRepoFile(url) {\n    const cache = this._repoStore.get(url);\n    if (cache) {\n      return cache;\n    }\n    try {\n      let res = await fetch(url);\n      res = await res.json();\n      if (res) {\n        res.content = window.atob(res.content);\n        this._repoStore.save(url, res);\n        return res;\n      } else {\n        throw new Error(`Request Repo File failed`);\n      }\n    } catch (err) {\n      ErrorModel.error = err;\n    }\n  }\n\n  _isIncludedFile(path, list) {\n    return list.find(p => {\n      return path.includes(p);\n    });\n  }\n}\n\nexport default new GitHubData();\n"],"sourceRoot":""}