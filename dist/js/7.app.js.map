{"version":3,"sources":["webpack:///./src/containers/NoticeContainer.js"],"names":["NoticeContainer","listEl","useRef","useSliderEffect","el","useEffect","timer","setInterval","renderItem","current","children","clearInterval","active","list","Array","prototype","forEach","call","item","i","classList","add","remove","length"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEe,SAASA,eAAT,GAA2B;AACxC,MAAMC,MAAM,GAAGC,oDAAM,CAAC,IAAD,CAArB;AACAC,iBAAe,CAACF,MAAD,CAAf;AAEA,SACE;AAAK,aAAS,EAAC,kBAAf;AAAkC,OAAG,EAAEA;AAAvC,KACE;AAAG,aAAS,EAAC,sBAAb;AAAoC,UAAM,EAAC,QAA3C;AAAoD,OAAG,EAAC,qBAAxD;AACE,QAAI,EAAC;AADP,iHADF,EAKE;AAAG,aAAS,EAAC,iBAAb;AAA+B,UAAM,EAAC,QAAtC;AAA+C,OAAG,EAAC,qBAAnD;AACE,QAAI,EAAC;AADP,KAEE,2DAAC,sDAAD;AAAM,QAAI,EAAC;AAAX,IAFF,sCALF,EASE;AAAG,aAAS,EAAC,iBAAb;AAA+B,UAAM,EAAC,QAAtC;AAA+C,OAAG,EAAC,qBAAnD;AAAyE,QAAI,EAAC;AAA9E,KACE,2DAAC,sDAAD;AAAM,QAAI,EAAC;AAAX,IADF,sFATF,EAYE;AAAG,aAAS,EAAC,iBAAb;AAA+B,UAAM,EAAC,QAAtC;AAA+C,OAAG,EAAC,qBAAnD;AAAyE,QAAI,EAAC;AAA9E,KACE,2DAAC,sDAAD;AAAM,QAAI,EAAC;AAAX,IADF,uBAZF,EAeE;AAAG,aAAS,EAAC,iBAAb;AAA+B,UAAM,EAAC,QAAtC;AAA+C,OAAG,EAAC,qBAAnD;AACE,QAAI,EAAC;AADP,KAEE,2DAAC,sDAAD;AAAM,QAAI,EAAC;AAAX,IAFF,wFAfF,CADF;AAsBD;;AAED,SAASE,eAAT,CAAyBC,EAAzB,EAA6B;AAC3BC,yDAAS,CAAC,YAAM;AACd,QAAMC,KAAK,GAAGC,WAAW,CAAC;AAAA,aAAMC,UAAU,CAACJ,EAAE,CAACK,OAAH,CAAWC,QAAZ,CAAhB;AAAA,KAAD,EAAwC,KAAxC,CAAzB;AACA,WAAO;AAAA,aAAMC,aAAa,CAACL,KAAD,CAAnB;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT,CAD2B,CAInB;;AAER,MAAIM,MAAM,GAAG,CAAb;;AACA,WAASJ,UAAT,CAAoBK,IAApB,EAA0B;AACxBC,SAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BJ,IAA7B,EAAmC,UAACK,IAAD,EAAOC,CAAP,EAAa;AAC9C,UAAIA,CAAC,KAAKP,MAAV,EAAkB;AAChBM,YAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,MAAnB;AACD,OAFD,MAEO;AACLH,YAAI,CAACE,SAAL,CAAeE,MAAf,CAAsB,MAAtB;AACD;AACF,KAND;AAOAV,UAAM,GAAG,CAACA,MAAM,GAAG,CAAV,IAAeC,IAAI,CAACU,MAA7B;AACD;AACF,C","file":"7.app.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Icon } from 'semantic-ui-react';\n\nexport default function NoticeContainer() {\n  const listEl = useRef(null);\n  useSliderEffect(listEl);\n\n  return (\n    <div className='notice-container' ref={listEl}>\n      <a className='animated fadeIn show' target='_blank' rel='noopener noreferrer'\n        href='https://www.yuque.com/?CODELF'>\n        [语雀] 阿里技术团队打造的专业云知识库\n      </a>\n      <a className='animated fadeIn' target='_blank' rel='noopener noreferrer'\n        href='https://github.com/unbug/snts'>\n        <Icon name='heartbeat' /> SAY NO TO SUICIDE PUBLIC LICENSE\n      </a>\n      <a className='animated fadeIn' target='_blank' rel='noopener noreferrer' href='//mihtool.com/'>\n        <Icon name='code' /> [MIHTool] iOS 上调试和优化页面的工具\n      </a>\n      <a className='animated fadeIn' target='_blank' rel='noopener noreferrer' href='https://www.wasmrocks.com/'>\n        <Icon name='hand rock' /> WebAssembly Rocks\n      </a>\n      <a className='animated fadeIn' target='_blank' rel='noopener noreferrer'\n        href='https://github.com/unbug/react-native-train/blob/master/README.md'>\n        <Icon name='video' /> [开源] React Native 开发培训资料和视频\n      </a>\n    </div>\n  )\n}\n\nfunction useSliderEffect(el) {\n  useEffect(() => {\n    const timer = setInterval(() => renderItem(el.current.children), 10000);\n    return () => clearInterval(timer);\n  }, []); // run an effect and clean it up only once (on mount and unmount), you can pass an empty array ([])\n\n  let active = 1;\n  function renderItem(list) {\n    Array.prototype.forEach.call(list, (item, i) => {\n      if (i === active) {\n        item.classList.add('show');\n      } else {\n        item.classList.remove('show');\n      }\n    });\n    active = (active + 1) % list.length;\n  }\n}\n"],"sourceRoot":""}